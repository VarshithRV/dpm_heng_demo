<?xml version="1.0"?>
<launch>
  <!--right's arguments-->
  <arg name="right_kinematics" default="$(find ur16e_dual_arm_control)/etc/right_ur16e_kinematics_configuration.yaml"/>
  <arg name="right_controller_config_file" default="$(find ur16e_dual_arm_control)/etc/right_controllers.yaml"/>
  <arg name="right_ip" default="192.168.1.3"/>
  <arg name="right_reverse_port" default="60001"/>
  <arg name="right_script_sender_port" default="60002"/>
  <arg name="right_trajectory_port" default="60003"/>
  <arg name="right_script_command_port" default="60004"/>

  <!--left's arguments-->
  <arg name="left_kinematics" default="$(find ur16e_dual_arm_control)/etc/left_ur16e_kinematics_configuration.yaml"/>
  <arg name="left_controller_config_file" default="$(find ur16e_dual_arm_control)/etc/left_controllers.yaml"/>
  <arg name="left_ip" default="192.168.1.1"/>
  <arg name="left_reverse_port" default="50001"/>
  <arg name="left_script_sender_port" default="50002"/>
  <arg name="left_trajectory_port" default="50003"/>
  <arg name="left_script_command_port" default="50004"/>

  <!--common arguments-->
  <arg name="use_tool_communication" default="false"/>
  <arg name="controllers" default="joint_state_controller scaled_pos_joint_traj_controller speed_scaling_state_controller force_torque_sensor_controller" doc="Controllers that are activated by default."/>
  <arg name="stopped_controllers" default="pos_joint_traj_controller joint_group_vel_controller" doc="Controllers that are initally loaded, but not started."/>

  <include file="$(find ur16e_dual_arm_description)/launch/load_description.launch">
    <arg name="left_kinematics" value="$(arg left_kinematics)"/>
    <arg name="right_kinematics" value="$(arg right_kinematics)"/>
  </include>

  <group ns="right">
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <include file="$(find ur_robot_driver)/launch/ur_control.launch">
      <arg name="use_tool_communication" value="$(arg use_tool_communication)"/>
      <arg name="controller_config_file" value="$(arg right_controller_config_file)"/>
      <arg name="robot_ip" value="$(arg right_ip)"/>
      <arg name="reverse_port" value="$(arg right_reverse_port)"/>
      <arg name="script_sender_port" value="$(arg right_script_sender_port)"/>
      <arg name="trajectory_port" value="$(arg right_trajectory_port)"/>
      <arg name="script_command_port" value="$(arg right_script_command_port)"/>
      <arg name="kinematics_config" value="$(arg right_kinematics)"/>
      <arg name="tf_prefix" value="right_"/>
      <arg name="controllers" value="$(arg controllers)"/>
      <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>
    </include>
  </group>

  <group ns="left">
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <include file="$(find ur_robot_driver)/launch/ur_control.launch">
      <arg name="use_tool_communication" value="$(arg use_tool_communication)"/>
      <arg name="controller_config_file" value="$(arg left_controller_config_file)"/>
      <arg name="robot_ip" value="$(arg left_ip)"/>
      <arg name="reverse_port" value="$(arg left_reverse_port)"/>
      <arg name="script_sender_port" value="$(arg left_script_sender_port)"/>
      <arg name="trajectory_port" value="$(arg left_trajectory_port)"/>
      <arg name="script_command_port" value="$(arg left_script_command_port)"/>
      <arg name="kinematics_config" value="$(arg left_kinematics)"/>
      <arg name="tf_prefix" value="left_"/>
      <arg name="controllers" value="$(arg controllers)"/>
      <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>
    </include>
  </group>

  <!-- Convenience stuff for demo purposes
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find ur_example_dual_robot)/etc/view_robot.rviz" required="true" />
  <node name="rqt_joint_trajectory_controller" pkg="rqt_joint_trajectory_controller" type="rqt_joint_trajectory_controller" respawn="false" output="screen">
  </node> -->

</launch>
